{"version":3,"sources":["components/Ingredients.jsx","components/Instructions.jsx","components/Cards.jsx","components/SearchField.jsx","App.js","index.js"],"names":["ingr","props","ingList","ingrList","imageFunction","img","concat","react_default","a","createElement","map","ingredient","Fragment","key","name","_","capitalize","amount","metric","value","unit","src","image","alt","ins","insList","step","number","style","align","useStyles","makeStyles","theme","root","maxWidth","margin","media","height","SingleRecipe","classes","_useState","useState","_useState2","Object","slicedToArray","openIng","setOpenIng","_useState3","_useState4","openIns","setOpenIns","_useState5","_useState6","ingredients","setIngredients","_useState7","_useState8","instructions","setInstructions","_useState9","_useState10","summary","setSummary","imgSrc","id","API_Key","url","getIngredients","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","stop","apply","this","arguments","getInstructions","_ref2","_callee2","_context2","steps","useEffect","didCancel","_getSummary","_callee3","_context3","t0","console","log","getSummary","Card","className","CardHeader","title","CardMedia","CardContent","Grid","container","direction","justify","flexGrow","Typography","color","variant","gutterBottom","servings","readyInMinutes","healthScore","CardActions","Fab","onClick","size","backgroundColor","Collapse","in","timeout","unmountOnExit","Instructions","Search","Input","placeholder","onChange","event","setSearchField","target","autoFocus","searchField","type","width","endAdornment","InputAdornment","position","IconButton","getRecipes","preventDefault","SearchSharp_default","require","config","offset","mixins","toolbar","App","useTheme","matches","useMediaQuery","breakpoints","down","recipes","setRecipes","results","AppBar","Toolbar","textAlign","fontSize","marginLeft","Hidden","xsDown","smUp","disableGutters","alignItems","spacing","recipe","item","xs","sm","md","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2dc181e5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function ingr(props){\r\n\r\n  const ingList = props.ingrList;\r\n  function imageFunction(img) {\r\n    return `https://spoonacular.com/cdn/ingredients_100x100/${img}`;\r\n  }\r\n  return (\r\n      <table>\r\n          {ingList.map(ingredient => (\r\n            <React.Fragment key={ingredient.name}>\r\n              <tr>\r\n                <td>\r\n                  {_.capitalize(ingredient.name)}\r\n                </td>\r\n                <td>\r\n                  {ingredient.amount.metric.value}&nbsp;\r\n                  {ingredient.amount.metric.unit}\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    src={imageFunction(ingredient.image)}\r\n                    alt={ingredient.name}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <hr />\r\n            </React.Fragment>\r\n          ))}\r\n      </table>\r\n  );\r\n};\r\n\r\n","import React from \"react\";\r\n\r\nconst ins = props => {\r\n  const insList = props.insList;\r\n  return (\r\n    <div>\r\n      {insList.map(step => (\r\n        <React.Fragment key={step.number}>\r\n          <p style={{ align: \"left\" }}>{step.step}</p>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ins;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Ingredient from \"./Ingredients\";\r\nimport Instruction from \"./Instructions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 350,\r\n    margin: \"auto\"\r\n  },\r\n  media: {\r\n    height: 160\r\n  }\r\n}));\r\n\r\nexport default function SingleRecipe(props) {\r\n  const classes = useStyles();\r\n  const [openIng, setOpenIng] = useState(false);\r\n  const [openIns, setOpenIns] = useState(false);\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [instructions, setInstructions] = useState([]);\r\n  const [summary, setSummary] = useState({});\r\n  const imgSrc = ` https://spoonacular.com/recipeImages/${\r\n    props.id\r\n  }-480x360.jpg?apiKey=${props.API_Key}`;\r\n\r\n  let url = `https://api.spoonacular.com/recipes/${\r\n    props.id\r\n  }/information?apiKey=${props.API_Key}`;\r\n\r\n  const getIngredients = async () => {\r\n    const response = await fetch(\r\n      `https://api.spoonacular.com/recipes/${\r\n        props.id\r\n      }/ingredientWidget.json?apiKey=${props.API_Key}`\r\n    );\r\n    const data = await response.json();\r\n    setIngredients(data.ingredients);\r\n  };\r\n\r\n  const getInstructions = async () => {\r\n    const response = await fetch(\r\n      `https://api.spoonacular.com/recipes/${\r\n        props.id\r\n      }/analyzedInstructions?apiKey=${props.API_Key}`\r\n    );\r\n    const data = await response.json();\r\n    setInstructions(data[0].steps);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    async function getSummary() {\r\n      if (!didCancel) {\r\n        try {\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n          setSummary(data);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n    getSummary();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title={summary.title} />\r\n      <CardMedia className={classes.media} image={imgSrc} />\r\n      <CardContent>\r\n        <Grid container direction=\"row\" justify=\"flex-start\">\r\n          <Grid style={{ flexGrow: \"1\" }}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n              gutterBottom={true}\r\n            >\r\n              Serves {summary.servings} , gets ready in {summary.readyInMinutes}{\" \"}\r\n              minutes\r\n              <br />\r\n              Health score : {summary.healthScore}\r\n            </Typography>\r\n          </Grid>\r\n          <CardActions>\r\n            <Fab\r\n              onClick={() => {\r\n                setOpenIng(!openIng);\r\n                setOpenIns(false);\r\n                getIngredients();\r\n                getInstructions();\r\n              }}\r\n              size=\"medium\"\r\n              variant=\"extended\"\r\n              style={{\r\n                backgroundColor: \"purple\",\r\n                color: \"white\"\r\n              }}\r\n            >\r\n              Ingredients\r\n            </Fab>\r\n            <Fab\r\n              onClick={() => {\r\n                setOpenIns(!openIns);\r\n                setOpenIng(false);\r\n                getIngredients();\r\n                getInstructions();\r\n              }}\r\n              size=\"medium\"\r\n              variant=\"extended\"\r\n              style={{\r\n                backgroundColor: \"purple\",\r\n                color: \"white\"\r\n              }}\r\n            >\r\n              Instructions\r\n            </Fab>\r\n          </CardActions>\r\n        </Grid>\r\n      </CardContent>\r\n      <Collapse in={openIng} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Ingredient ingrList={ingredients} />\r\n        </CardContent>\r\n      </Collapse>\r\n      <Collapse in={openIns} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Instruction insList={instructions} />\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { InputAdornment } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchSharpIcon from \"@material-ui/icons/SearchSharp\";\r\n\r\nexport default function Search(props) {\r\n  return (\r\n    <Input\r\n      placeholder=\"Search...\"\r\n      onChange={event => props.setSearchField(event.target.value)}\r\n      autoFocus\r\n      value={props.searchField}\r\n      type=\"text\"\r\n      margin=\"dense\"\r\n      style={{ width: `${props.width}%`, color: \"white\" }}\r\n      endAdornment={\r\n        <InputAdornment position=\"end\">\r\n          <IconButton\r\n            onClick={event => {\r\n              props.getRecipes();\r\n              event.preventDefault();\r\n            }}\r\n            type=\"submit\"\r\n          >\r\n            <SearchSharpIcon style={{ color: \"white\" }} />\r\n          </IconButton>\r\n        </InputAdornment>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Recipe from \"./components/Cards\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ToolBar from \"@material-ui/core/Toolbar\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport SearchBar from \"./components/SearchField\";\nimport \"./styles.css\";\n\nrequire('dotenv').config();\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: \"1\"\n  },\n  offset: theme.mixins.toolbar\n}));\nexport default function App() {\n  const classes = useStyles();\n  const API_Key = \"3c3abd24c08748cb94e64115fc30ae21\";\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const [recipes, setRecipes] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.spoonacular.com/recipes/search?apiKey=${API_Key}&query=${searchField}&number=12&offset=10&instructionsRequired=true`\n    );\n    const data = await response.json();\n    setRecipes(data.results);\n  };\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"absolute\" style={{ backgroundColor: \"purple\" }}>\n        <ToolBar>\n          <Typography\n            variant=\"h5\"\n            className={classes.root}\n            style={\n              matches\n                ? { textAlign: \"center\", fontSize: \"6.9vh\", margin: \"4.1%\" }\n                : { textAlign: \"left\", marginLeft: \"25%\" }\n            }\n          >\n            Hey Cooking\n          </Typography>\n          <Hidden xsDown>\n            <SearchBar\n              width=\"40\"\n              getRecipes={getRecipes}\n              searchField={searchField}\n              setSearchField={setSearchField}\n            />\n          </Hidden>\n        </ToolBar>\n        <Hidden smUp>\n          <ToolBar>\n            <SearchBar\n              width=\"100\"\n              getRecipes={getRecipes}\n              searchField={searchField}\n              setSearchField={setSearchField}\n            />\n          </ToolBar>\n        </Hidden>\n      </AppBar>\n      <ToolBar disableGutters={false} />\n      {matches ? (\n        <div>\n          <ToolBar />\n          <ToolBar />\n        </div>\n      ) : null}\n      <div className={classes.offset}>\n        <div className={classes.root}>\n          <Grid\n            container\n            direction={matches ? \"column\" : \"row\"}\n            alignItems={matches ? \"center\" : null}\n            wrap=\"wrap\"\n            spacing={5}\n          >\n            {recipes.map(recipe => (\n              <Grid className={classes.root} item xs={12} sm={6} md={4}>\n                <Recipe key={recipe.id} id={recipe.id} API_Key={API_Key} />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nrequire('dotenv').config();\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}